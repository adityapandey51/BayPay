generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id          Int      @id @default(autoincrement())
  email       String?  @unique
  name        String? 
  number      String  @unique
  password    String
  balance     Balance[]
  onRampTransactions OnRanmpTransactions[]
  sentTransfers p2pTransfer[] @relation(name: "FromUserRelation")
  recievedTransfers p2pTransfer[] @relation(name: "ToUserRelation")
}

model p2pTransfer{
  id Int @id @default(autoincrement())
  amount Int
  timestamp DateTime
  fromUserId  Int
  fromUser User @relation(name: "FromUserRelation", fields: [fromUserId],references: [id])
  toUserId Int
  toUser User @relation(name: "ToUserRelation", fields: [toUserId],references: [id])
}

model Balance{
  id Int @id @default(autoincrement())
  userId Int @unique
  amount Int
  locked Int
  user User @relation(fields: [userId],references: [id])
}

model OnRanmpTransactions{
  id Int @id @default(autoincrement())
  userId Int
  status onRampStatus
  provider String
  token String @unique
  amount Int
  startTime DateTime
  user User @relation(fields: [userId], references: [id])
}

model Merchant {
  id          Int     @id @default(autoincrement())
  email       String  @unique
  name        String?
  auth_type   AuthType   
}

enum AuthType {
  Google
  Github
}

enum onRampStatus {
  Success
  Failure
  Processing
}